language: c
compiler: gcc
sudo: required
dist: trusty

cache:
  apt: true

env:
  matrix:
    - MY_PV=3.0.0_alpha1

addons:
  apt:
    sources:
      - sourceline: 'ppa:niko2040/e19'
    packages:
      - gettext
      - libc6-dbg
      - libck-connector0 
      - libck-connector-dev
      - libefl
      - libefl-dbg
      - libefl-dev
      - libpam0g-dev
      - libpam-ck-connector
      - python3-pip

before_install:
  - if [ "${COVERITY_SCAN_BRANCH}" = "1" ]; then echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-certificates.crt ; fi

install:
  - sudo pip3 install --upgrade pip
  - sudo pip3 install meson
  - mkdir .bin
  - curl -L https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip -o .bin/ninja-linux.zip
  - unzip .bin/ninja-linux.zip -d .bin

before_script:
  - export PATH=$PATH:$PWD/.bin

jobs:
  include:
    - stage: test build options
    - env: BUILD_OPTS="-Dconsolekit=false"
    - env: BUILD_OPTS="-Dpam=false"
    - env: BUILD_OPTS="-Dconsolekit=false -Dpam=false"
    - stage: Coverity
      env: 
        - secure: APFXgkKcg8AJur2MTDfF5WwRX/7Yyop2IrMv+jIh5NIEI0exLOJvZiGoZ7zQd+DN+eX/u7oA5RobX/ETfOaVLdLs2U3SRCmmNO2nNr3qoIuMyTBrozbaphl8eYPqZB6JxusqR4swyycBaTGzDXUCTqA5HGjpmoDloO5s2URLS3F+1gO372wFaxgdH6YktYMErgnzpkA3MmO04nF0EDlHQmoxpQQNswQs46IWe96yuyCeoJBcgEtNpsFwIzeTRvT+nDluaxZ+dU47TlZmHIL17YIxNl+ZGwvB9frWTt8Pj4KhOx6+MMnNVF4KWzMtM4Bo0tvREXyWagknnAcmk6g6Mh7BoMIyovlVIZ7yqLkhbOdKgfziNEudvbT/Bta0NAY7VRXpZ8791y+eBviyu28IbObT1e8Elxr1ZRsaBEZOzuG2bryrMy4SI0yxGSqWZjskqRQ1ZlYUcLujGtfqGaKy+K1d+TB74nGPTrPzPSgVdUDYHM4SUPpDgxR7RQSe08k0/DNKoWijjt6H5JptgnQpQvn4/2a/p2XatWqommuKmsA+1hJgmOb8BnClNAK5i8BrzcQURrY/X3QuYMMHCjkjYt0jVnSPgLEwI2tfyK4y76igfpJc8uQ4kYWhFNFZj0uDWn+T15am3toCqUPTpDk3WYKP+DiqEEL5ghhrhO/tT90=
      addons:
        coverity_scan:
          project:
            name: Obsidian-StudiosInc/entrance
            description: Build submitted via Travis CI
          notification_email: wlt@o-sinc.com
          build_command_prepend: meson --prefix /usr -Ddebug=true . coverity-build
          build_command: .bin/ninja -C coverity-build
          branch_pattern: master

script:
  - meson --prefix /usr ${BUILD_OPTS} . build && .bin/ninja -C build

notifications:
  email: false
